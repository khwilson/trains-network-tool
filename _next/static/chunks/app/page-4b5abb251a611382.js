(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[931],{284:function(t,e,n){Promise.resolve().then(n.bind(n,4290))},4290:function(t,e,n){"use strict";n.r(e),n.d(e,{default:function(){return Home}});var s=n(7437),o=n(9778),i=n(2904),c=n(9652),r=n(4343),a=n(2265),l=n(7042),d=n(4355);function computeShortestPaths(t){let e={};for(let n of Object.values(t))e[n.fromCity]=[],e[n.toCity]=[];for(let n of Object.values(t))n.isOn&&(e[n.fromCity].push({out:n.toCity,distance:n.distance}),e[n.toCity].push({out:n.fromCity,distance:n.distance}));let n={};for(let t of Object.keys(e)){let s={},o=new d.PriorityQueue((t,e)=>t.distance>e.distance?1:-1);for(o.enqueue({path:[t],distance:0});o.size()>0;){let{path:t,distance:n}=o.dequeue(),i=t[t.length-1];if(void 0===s[i])for(let c of(s[i]={path:t,distance:n},e[i]))o.enqueue({path:[...t,c.out],distance:n+c.distance})}n[t]=s}return n}function computeRouteStatistics(t){let{shortestPaths:e,cities:n,metcalfe:s={coeff:75e3,power:.8},financial:o={operatingCostPerKm:.07,maxProfitPerPassenger:50,baseFarePerKm:.135}}=t,i={},{coeff:c,power:r}=s,{operatingCostPerKm:a,maxProfitPerPassenger:l,baseFarePerKm:d}=o;if(!n)return i;for(let t of Object.keys(e)){i[t]={};let s=e[t];for(let e of Object.keys(s)){let{path:o,distance:u}=s[e],p=Math.pow(u<500?500:u,2);if(!n[t]||!n[e])return{};let h=1e6*(c*Math.pow(n[t].population/1e6,r)*Math.pow(n[e].population/1e6,r))/p,j=a*u,m=j+l,f=d*u,x=m<f?m:f;i[t][e]={fromCityPop:n[t].population,toCityPop:n[e].population,ridership:h,path:o,distance:u,operatingCostPerPassenger:j,maxFare:m,proposedFare:f,fare:x,profitPerPassenger:x-j,totalProfit:(x-j)*h}}}return i}function computeSegmentStatistics(t){let{routeStatistics:e,segments:n}=t,s={};for(let t of Object.keys(e)){let o=e[t];for(let t of Object.keys(o)){let{ridership:e,path:i,totalProfit:c,distance:r}=o[t];for(let t=0;t<i.length-1;++t){let o="".concat(i[t]," - ").concat(i[t+1]),a=n[o];a||(a=n[o="".concat(i[t+1]," - ").concat(i[t])]);let l=s[o];l||(l={ridership:0,totalProfit:0,cost:a.cost,roi:-1},s[o]=l),l.ridership+=e/2,l.totalProfit+=c*(a.distance/r)/2,l.roi=l.totalProfit/a.cost}}}return s}var u=n(2025);function Home(){let[t,e]=(0,a.useState)({}),[n,d]=(0,a.useState)({});(0,a.useEffect)(()=>{(0,i.gy)("/segments.csv",t=>({name:"".concat(t.from_city," - ").concat(t.to_city),fromCity:t.from_city,toCity:t.to_city,distance:+t.distance,cost:+t.cost,isOn:!0})).then(t=>{let e={};for(let n of t)e["".concat(n.fromCity," - ").concat(n.toCity)]=n;d(e)})},[]),(0,a.useEffect)(()=>{(0,i.gy)("/cities.csv",t=>({city:t.city,state:t.state,population:+t.population,lng:+t.lng,lat:+t.lat})).then(t=>{let n={};t.map(t=>n[t.city]=t),e(n)})},[]);let flipSegmentParity=t=>{d({...n,[t]:{...n[t],isOn:!n[t].isOn}})},p=(0,c.ZP)([0,.3]).interpolator(t=>(0,r.zD)(t+.25)),h=(0,a.useMemo)(()=>{let e=computeShortestPaths(n),s=computeRouteStatistics({shortestPaths:e,cities:t}),o=computeSegmentStatistics({routeStatistics:s,segments:n});return{shortestPaths:e,routeStatistics:s,segmentStatistics:o}},[n,t]);return(0,s.jsxs)("main",{className:"grid grid-cols-4 min-h-screen p-6",children:[(0,s.jsx)("div",{className:"col-start-2 col-end-4",children:(0,s.jsxs)(o.ComposableMap,{projection:"geoAlbers",projectionConfig:{center:[0,40]},children:[(0,s.jsx)(o.Geographies,{geography:"/states.json",children:t=>{let{geographies:e}=t;return e.map(t=>(0,s.jsx)(o.Geography,{geography:t,fill:"#ddd",stroke:"#000",style:{default:{outline:"none"},hover:{outline:"none"},pressed:{outline:"none"}},tabIndex:-1},t.rsmKey))}}),Object.values(t).map((t,e)=>{let{lng:n,lat:i}=t;return(0,s.jsx)(o.Marker,{coordinates:[n,i],children:(0,s.jsx)("circle",{r:4,stroke:"#fff",strokeWidth:2,fill:"#f00"})},"cities-".concat(e))}),Object.values(n).map((e,n)=>{let{fromCity:i,toCity:c,isOn:r}=e,a=t[i],d=t[c],u="".concat(i," - ").concat(c);if(!a||!d)return(0,s.jsx)(s.Fragment,{});let j=[a.lng,a.lat],m=[d.lng,d.lat];return(0,s.jsx)(o.Line,{onClick:()=>flipSegmentParity(u),coordinates:[j,m],stroke:(0,l.Z)({"#000":!r,[p((h.segmentStatistics[u]||{roi:-1}).roi)]:r})},"segment-".concat(n))})]})}),(0,s.jsx)("div",{className:"col-start-1 col-end-5",children:(0,s.jsxs)(u.Tabs,{value:"input-population",children:[(0,s.jsxs)(u.TabsHeader,{children:[(0,s.jsx)(u.Tab,{value:"input-population",children:"Population"}),(0,s.jsx)(u.Tab,{value:"input-segments",children:"Segments"}),(0,s.jsx)(u.Tab,{value:"output-segments",children:"Output Segments"})]}),(0,s.jsxs)(u.TabsBody,{children:[(0,s.jsx)(u.TabPanel,{value:"input-population",children:(0,s.jsx)("div",{className:"col-start-1 col-end-5",children:(0,s.jsxs)("table",{children:[(0,s.jsx)("thead",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Name"}),(0,s.jsx)("td",{children:"Population"})]})}),(0,s.jsx)("tbody",{children:Object.values(t).map((t,n)=>(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:t.city},"td-name-".concat(n)),(0,s.jsx)("td",{children:(0,s.jsx)("input",{value:t.population,onChange:n=>e(e=>({...e,[t.city]:{...t,population:+n.target.value}}))})},"td-population-".concat(n))]},"tr-".concat(n)))})]})})}),(0,s.jsx)(u.TabPanel,{value:"input-segments",children:(0,s.jsx)("div",{className:"col-start-1 col-end-5",children:(0,s.jsxs)("table",{children:[(0,s.jsx)("thead",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"From"}),(0,s.jsx)("td",{children:"To"}),(0,s.jsx)("td",{children:"Distance"}),(0,s.jsx)("td",{children:"Cost"})]})}),(0,s.jsx)("tbody",{children:Object.values(n).map((t,e)=>(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:t.fromCity},"input-segment-td-from-".concat(e)),(0,s.jsx)("td",{children:t.toCity},"input-segment-td-to-".concat(e)),(0,s.jsx)("td",{children:t.distance},"input-segment-td-dist-".concat(e)),(0,s.jsx)("td",{children:(0,s.jsx)("input",{value:t.cost,onChange:e=>d(n=>({...n,[t.name]:{...t,cost:+e.target.value}}))})},"input-segment-td-cost-".concat(e))]},"input-segment-tr-".concat(e)))})]})})}),(0,s.jsx)(u.TabPanel,{value:"output-segments",children:(0,s.jsx)("div",{className:"col-start-1 col-end-5",children:(0,s.jsxs)("table",{children:[(0,s.jsx)("thead",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"From"}),(0,s.jsx)("td",{children:"To"}),(0,s.jsx)("td",{children:"Capital Cost ($b)"}),(0,s.jsx)("td",{children:"Ridership (m)"}),(0,s.jsx)("td",{children:"Total Operating Profit ($m)"}),(0,s.jsx)("td",{children:"Operating Profit / Capital Cost (%)"})]})}),(0,s.jsx)("tbody",{children:Object.keys(h.segmentStatistics).map((t,e)=>{let n=h.segmentStatistics[t],[o,i]=t.split(" - ");return(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:o},"output-segment-td-from-".concat(e)),(0,s.jsx)("td",{children:i},"output-segment-td-to-".concat(e)),(0,s.jsx)("td",{children:(n.cost/1e9).toFixed(2)},"output-segment-td-cost-".concat(e)),(0,s.jsx)("td",{children:(n.ridership/1e6).toFixed(3)},"output-segment-td-ridership-".concat(e)),(0,s.jsx)("td",{children:(n.totalProfit/1e6).toFixed(2)},"output-segment-td-totalprofit-".concat(e)),(0,s.jsx)("td",{children:(100*n.roi).toFixed(1)},"output-segment-td-roi-".concat(e))]},"output-segment-tr-".concat(e))})})]})})})]})]})})]})}}},function(t){t.O(0,[384,79,971,472,744],function(){return t(t.s=284)}),_N_E=t.O()}]);